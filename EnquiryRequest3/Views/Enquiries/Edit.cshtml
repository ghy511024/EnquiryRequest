@model EnquiryRequest3.Models.UserCreateEditEnquiryViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <h3 style="color:red">@Html.Raw(ViewBag.Message)</h3>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @section scripts {
        <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
        <style>
            .map {
                height: 400px;
                width: 100%;
            }
        </style>
    }
        <div class="form-horizontal">
            <h4>Enquiry</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readOnly = "readOnly" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            @{
        Html.RenderPartial("_PartialMap");
            }
            <div class="form-group">
                @Html.LabelFor(model => model.SearchTypeId, "Search Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SearchTypeId", null, htmlAttributes: new { @class = "form-control", @onchange = "javascript:populateTextBoxes();" })
                    @Html.ValidationMessageFor(model => model.SearchTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label for="SetArea" class="control-label col-md-2">Set area ----></label>
                <div class="col-md-10">
                    <input id="SetArea" type="button" value="Set Area" class="btn btn-default col-md-2" onclick="setAreaButtonClick()" />
                </div>
            </div>

            <div class="form-group">
                <label for="Area" class="control-label col-md-2">Area (hectares)</label>
                <div class="col-md-10">
                    <input id="Area" type="text" value="" class="form-control" disabled />
                </div>
                @Html.LabelFor(model => model.EstimatedCost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstimatedCost, new { htmlAttributes = new { @class = "form-control", @id = "Cost", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (ViewContext.HttpContext.User.IsInRole("EnquiryManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.SearchAreaWkt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SearchAreaWkt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.SearchAreaWkt, "", new { @class = "text-danger" })
                <input id="SearchAreaJson" type="hidden" value="" class="form-control" />
            </div>
        </div>
}
else
{
        <div>
            @Html.HiddenFor(model => model.SearchAreaWkt)
            <input id="SearchAreaJson" type="hidden" value="" class="form-control" />
        </div>
}



            <div class="form-group">
                @Html.LabelFor(model => model.NoOfYears, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfYears, new { htmlAttributes = new { @class = "form-control", @value = "10" } })
                    @Html.ValidationMessageFor(model => model.NoOfYears, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Agency, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Agency, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AgencyContact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AgencyContact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AgencyContact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataUsedFor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataUsedFor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataUsedFor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Citations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Citations)
                        @Html.ValidationMessageFor(model => model.Citations, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GisKml, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.GisKml)
                        @Html.ValidationMessageFor(model => model.GisKml, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Express, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Express)
                        @Html.ValidationMessageFor(model => model.Express, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvoiceEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.EnquiryId)
            @Html.HiddenFor(model => model.RowVersion)


            @if (ViewContext.HttpContext.User.IsInRole("EnquiryManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
    {

        <div class="form-group">
            @Html.LabelFor(model => model.AddedToRersDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddedToRersDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.AddedToRersDate, "", new { @class = "text-danger" })
                <input id="btnSetNowAddedToRersDate" type="button" value="Set Now" class="btn btn-default " onclick="SetNowToElement('AddedToRersDate')" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCleanedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCleanedDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.DataCleanedDate, "", new { @class = "text-danger" })
                <input id="btnSetNowDataCleanedDate" type="button" value="Set Now" class="btn btn-default " onclick="SetNowToElement('DataCleanedDate')" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportCompleteDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReportCompleteDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.ReportCompleteDate, "", new { @class = "text-danger" })
                <input id="btnSetNowReportCompleteDate" type="button" value="Set Now" class="btn btn-default " onclick="SetNowToElement('ReportCompleteDate')" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentsCleanedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentsCleanedDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.DocumentsCleanedDate, "", new { @class = "text-danger" })
                <input id="btnSetNowDocumentsCleanedDate" type="button" value="Set Now" class="btn btn-default " onclick="SetNowToElement('DocumentsCleanedDate')" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnquiryDeliveredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnquiryDeliveredDate, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.EnquiryDeliveredDate, "", new { @class = "text-danger" })
                <input id="btnSetNowEnquiryDeliveredDate" type="button" value="Set Now" class="btn btn-default " onclick="SetNowToElement('EnquiryDeliveredDate')" />

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdminComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdminComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdminComment, "", new { @class = "text-danger" })
            </div>
        </div>


}
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
