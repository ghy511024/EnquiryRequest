@model EnquiryRequest3.Models.Enquiry

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @section scripts {
        <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
        <style>
            .map {
                height: 100px;
                width: 100%;
            }
        </style>
    }
}
@*@{var wktName = "wkt" + @Model.EnquiryId; }*@

<div>
    <h4>Enquiry</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Invoice.Code)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Invoice.Code)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Code)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Code)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InvoiceEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InvoiceEmail)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SearchArea)
        </dt>

        <dd>
            <div class="row">
                <div class="col-md-2">
                    <div id="map" style="width: 150px; height: 150px;"></div>
                </div>
                <div class="col-md-10">
                    <textarea rows="7" cols="50" id="SearchAreaWkt" readonly>@Model.SearchArea.WellKnownValue.WellKnownText</textarea>
                    <textarea rows="7" cols="50" id="SearchAreaJson" readonly></textarea>
                </div>
            </div>


            <input type="text" id="Boundaries" data-geoJson="@ViewBag.Boundaries" data-coverageGeoJson="@ViewBag.Coverage" hidden />
            <input type="text" id="Area" hidden />
            <input type="text" id="Cost" hidden />
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.NoOfYears)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NoOfYears)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.JobNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.JobNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Agency)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Agency)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AgencyContact)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AgencyContact)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataUsedFor)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DataUsedFor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Citations)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Citations)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GisKml)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GisKml)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Express)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Express)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EnquiryDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EnquiryDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Comment)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Comment)
        </dd>
        @if (ViewContext.HttpContext.User.IsInRole("EnquiryManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
        {
            <dt>
                @Html.DisplayNameFor(model => model.AddedToRersDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AddedToRersDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DataCleanedDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DataCleanedDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ReportCompleteDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ReportCompleteDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DocumentsCleanedDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DocumentsCleanedDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.EnquiryDeliveredDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EnquiryDeliveredDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AdminComment)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AdminComment)
            </dd>
        }

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.EnquiryId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
